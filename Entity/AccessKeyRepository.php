<?php

namespace Atom\AuthenticationBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * AccessKeyRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AccessKeyRepository extends EntityRepository
{
    /**
     * Create a New AccessKey
     * Checks that the Public Key does not exist with a previous AccessKey
     * 
     * @return AccessKey  New AccessKey with Public and Private Keys set
     */
    public function createNewAccessKey()
    {
        do {
            $public_key  = $this->generatePublicKey();
            $private_key = $this->generatePrivateKey();

            $query = $this->getEntityManager()
                ->createQuery('
                    SELECT accessKey FROM AtomAuthenticationBundle:AccessKey accessKey
                    WHERE accessKey.public_key = :public_key
                        OR accessKey.private_key = :private_key'
            )->setParameters(array(
                    'public_key'  => $public_key,
                    'private_key' => $private_key
            ));

            try {
                $result = $query->getSingleResult();
            } catch (\Doctrine\ORM\NoResultException $e) {
                break;
            }            
        } while ($result instanceof AccessKey);

        $accessKey = new AccessKey();
        $accessKey->setPublicKey($public_key);
        $accessKey->setPrivateKey($private_key);

        return $accessKey;

    }

    /**
     * Generates a Public Key
     * 
     * @return string
     */
    private function generatePublicKey()
    {
        return strtoupper(substr(sha1(md5(uniqid(mt_rand(), true))), 0, 25));
    }

    /**
     * Generates a Private Key
     * 
     * @return string
     */
    private function generatePrivateKey()
    {
        return substr(base64_encode(openssl_random_pseudo_bytes(64, $strong)), 0, 45);
    }

}
